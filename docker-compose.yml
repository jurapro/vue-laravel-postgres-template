version: '3.9'

networks:
  it-cluster-network:
    driver: bridge

volumes:
  pgdata:

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: ./docker/Dockerfile.prod
    container_name: it-cluster-frontend
    restart: unless-stopped
    networks:
      - it-cluster-network

  backend:
    build:
      context: ./backend
      dockerfile: ./docker/Dockerfile
      args:
        USER: ${USER:-jurapro}
    entrypoint: sh -c "./wait-for-it.sh -t 300 db:5432 && /usr/bin/composer install && php /app/artisan migrate --force && php-fpm"
    volumes:
      - ./backend:/app
    environment:
      - APP_ENV=local
      - APP_KEY=base64:7t3iJGYKu1jqjeEQixGEL8mXwCr6XgVRmd6ryRII3Jo=
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - DB_DATABASE=${DB_DATABASE:-postgres}
      - DB_USERNAME=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-QWEasd123$}
    depends_on:
      - db
    container_name: it-cluster-backend
    restart: unless-stopped
    networks:
      - it-cluster-network

  backend-api:
    image: nginx:1.19-alpine
    volumes:
      - ./backend:/app
      - ./backend/docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
    container_name: it-cluster-backend-api
    restart: unless-stopped
    networks:
      - it-cluster-network

  db:
    image: postgres:15.0-alpine
    container_name: it-cluster-db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-QWEasd123$}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - it-cluster-network

  proxy:
    image: nginx:1.19-alpine
    container_name: it-cluster-proxy
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${WEB_PORT:-8000}:80
    depends_on:
      - frontend
      - backend-api
    networks:
      - it-cluster-network